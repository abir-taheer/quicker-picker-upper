# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI
on: [push, pull_request]
jobs:
    build:
        runs-on: ${{ matrix.os }}

        services:
          mysql:
            image: mysql:5.7
            env:
              MYSQL_ALLOW_EMPTY_PASSWORD: yes
              MYSQL_DATABASE: ci
            ports:
              - 3306
            options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

          postgres:
            image: postgres
            env:
              POSTGRES_PASSWORD: postgres
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

        strategy:
            matrix:
                node-version: [10.x, 12.x]
                os: [macos-latest, windows-latest, ubuntu-18.04, ubuntu-latest]
        steps:
            - uses: actions/checkout@v2

            - name: Cache node modules
              uses: actions/cache@v1
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies From package-lock.json File
              run: npm ci

            - name: Install database-specific packages
              run: npm install mysql pg pg-native

            - name: Build on mysql
              run: npm run build
              env:
                SEQUELIZE_URL: mysql://root:@localhost/ci

            - name: Build on postgres
                run: npm run build
                env:
                  SEQUELIZE_URL: postgres://postgres:postgres@localhost/ci

            - name: Test on mysql
                run: npm test
                env:
                  SEQUELIZE_URL: mysql://root:@localhost/ci

            - name: Test on postgres
              run: npm test
              env:
                SEQUELIZE_URL: postgres://postgres:postgres@localhost/ci
